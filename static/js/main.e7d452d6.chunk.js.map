{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","todo","onTodo","selectedTodoId","id","className","map","currentTodo","completed","title","type","onClick","TodoFilter","filterByStatus","setFilterByStatus","query","setQuery","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","useEffect","userId","loadedUser","href","email","name","App","selectedTodos","visibleTodos","setTodos","setTodo","selectedTodo","filter","search","toLowerCase","includes","trim","loadedTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7d452d6.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  todo: Todo | null;\n  onTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  todo,\n  onTodo,\n}) => {\n  const selectedTodoId = todo ? todo.id : 0;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(currentTodo => (\n          <tr\n            data-cy=\"todo\"\n            key={currentTodo.id}\n            className={currentTodo.id === selectedTodoId\n              ? 'has-background-info-light'\n              : ''}\n          >\n            <td className=\"is-vcentered\">{currentTodo.id}</td>\n            <td className=\"is-vcentered\">\n              {currentTodo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={currentTodo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {currentTodo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onTodo(currentTodo)}\n              >\n                <span className=\"icon\">\n                  <i className={currentTodo.id === selectedTodoId\n                    ? 'far fa-eye-slash'\n                    : 'far fa-eye'}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  filterByStatus: string;\n  setFilterByStatus: React.Dispatch<React.SetStateAction<string>>;\n  query: string;\n  setQuery: React.Dispatch<React.SetStateAction<string>>;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterByStatus,\n  setFilterByStatus,\n  query,\n  setQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filterByStatus}\n          onChange={(event) => setFilterByStatus(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => {\n          setQuery(event.target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(500)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo;\n  onTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  onTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(loadedUser => setUser(loadedUser));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nfunction searchInTitle(title: string, search: string) {\n  return title.toLowerCase().includes(search.trim().toLowerCase());\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todo, setTodo] = useState<Todo | null>(null);\n  const [filterByStatus, setFilterByStatus] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const onTodo = (selectedTodo: Todo | null) => {\n    setTodo(selectedTodo);\n  };\n\n  let selectedTodos;\n  let visibleTodos;\n\n  switch (filterByStatus) {\n    case 'active':\n      selectedTodos = todos.filter(currentTodo => !currentTodo.completed);\n      break;\n\n    case 'completed':\n      selectedTodos = todos.filter(currentTodo => currentTodo.completed);\n      break;\n\n    default:\n      selectedTodos = todos;\n      break;\n  }\n\n  if (query) {\n    visibleTodos = selectedTodos.filter(currentTodo => searchInTitle(currentTodo.title, query));\n  } else {\n    visibleTodos = selectedTodos;\n  }\n\n  useEffect(() => {\n    getTodos()\n      .then(loadedTodos => setTodos(loadedTodos));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterByStatus={filterByStatus}\n                setFilterByStatus={setFilterByStatus}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0\n                ? <TodoList todos={visibleTodos} todo={todo} onTodo={onTodo} />\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todo && (<TodoModal todo={todo} onTodo={onTodo} />)}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}